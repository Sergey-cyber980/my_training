### 1. Библиотека requests

"""Документация: Requests Documentation (https://docs.python-requests.org/en/latest/)

Возможности:
- Упрощает выполнение HTTP-запросов.
- Поддерживает различные методы HTTP (GET, POST, PUT, DELETE и т.д.).
- Позволяет работать с параметрами, заголовками и аутентификацией.

Пример использования:"""

import requests

# Выполняем GET-запрос
response = requests.get('https://api.github.com')

# Проверяем статус-код ответа
if response.status_code == 200:
    print("Успешный запрос!")
    print(response.json())  # Выводим данные в формате JSON
else:
    print("Ошибка:", response.status_code)


### 2. Библиотека numpy

"""Документация: NumPy Documentation (https://numpy.org/doc/stable/)

Возможности:
- Поддержка многомерных массивов и матриц.
- Быстрая математическая обработка массивов.
- Удобные функции для линейной алгебры, статистики и других математических операций.

Пример использования:"""

import numpy as np

# Создаем массив чисел
array = np.array([1, 2, 3, 4, 5])

# Выполняем математические операции
squared = array ** 2  # Квадрат каждого элемента
mean_value = np.mean(array)  # Среднее значение

print("Исходный массив:", array)
print("Квадраты:", squared)
print("Среднее значение:", mean_value)


### 3. Библиотека matplotlib

"""Документация: Matplotlib Documentation (https://matplotlib.org/stable/contents.html)

Возможности:
- Визуализация данных с помощью различных типов графиков (линейные, столбчатые, круговые и т.д.).
- Настройка внешнего вида графиков (цвета, метки, легенды и т.д.).
- Сохранение графиков в различных форматах (PNG, PDF и т.д.).

Пример использования:"""

import matplotlib.pyplot as plt

# Данные для графика
x = [1, 2, 3, 4, 5]
y = [2, 3, 5, 7, 11]

# Создание линейного графика
plt.plot(x, y, marker='o')
plt.title('Пример линейного графика')
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.grid()

# Сохранение графика в файл
plt.savefig('plot.png')

# Отображение графика
plt.show()


### Заключение

"""Выбор библиотек requests, numpy и matplotlib значительно расширяет возможности Python:

- Requests позволяет легко взаимодействовать с веб-API и получать данные из интернета.
- NumPy предоставляет мощные инструменты для работы с массивами и математическими операциями, что делает Python отличным выбором для научных вычислений.
- Matplotlib позволяет визуализировать данные, что помогает лучше понять и представить информацию.

Эти библиотеки делают Python универсальным инструментом для разработки приложений, анализа данных и визуализации."""